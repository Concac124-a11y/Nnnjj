import uiautomator2 as u2
import time, subprocess, os

# ====== K·∫øt n·ªëi thi·∫øt b·ªã ======
devices = os.popen("adb devices").read().strip().split("\n")[1:]
if not devices:
    raise Exception("Kh√¥ng t√¨m th·∫•y thi·∫øt b·ªã n√†o!")
serial = devices[0].split()[0]
d = u2.connect(serial)
print(f"‚úÖ ƒê√£ k·∫øt n·ªëi thi·∫øt b·ªã: {serial}")

job_counter = 0  # ƒë·∫øm s·ªë job ƒë√£ l√†m

# ====== H√†m h·ªó tr·ª£ ======
def open_golike():
    subprocess.run([
        "adb", "-s", serial, "shell", "monkey",
        "-p", "com.golike",
        "-c", "android.intent.category.LAUNCHER", "1"
    ])
    time.sleep(6)

def tap_ok_adb():
    try:
        subprocess.run(["adb", "-s", serial, "shell", "input", "tap", "378", "975"])
        print("‚úÖ ƒê√£ nh·∫•n OK b·∫±ng ADB")
        return True
    except Exception as e:
        print(f"[WARN] L·ªói nh·∫•n OK b·∫±ng ADB: {e}")
        return False

def click_retry(text=None, desc=None, retries=5):
    for _ in range(retries):
        try:
            if text and d(text=text).exists(timeout=3):
                d(text=text).click()
                return True
            if desc and d(description=desc).exists(timeout=3):
                d(description=desc).click()
                return True
        except Exception:
            time.sleep(1)
    return False

def wait_for_text(text, timeout=15):
    for _ in range(timeout):
        if d(textContains=text).exists:
            return True
        time.sleep(1)
    return False

def handle_ok_popup():
    for _ in range(5):
        tap_ok_adb()
        time.sleep(1)

# ====== H√†m x·ª≠ l√Ω job ======
def do_job():
    global job_counter

    # Ch·ªâ m·ªü GoLike m·ªôt l·∫ßn tr∆∞·ªõc khi l·∫•y job
    if job_counter == 0:
        open_golike()
        click_retry("Ki·∫øm Th∆∞·ªüng")
        d(textContains="Facebook").click_exists(timeout=12)
        time.sleep(8)

    # Job buttons
    job_buttons = ["cho b√†i vi·∫øt", "TƒÉng LIKE cho Fanpage", "TƒÉng Theo d√µi", "Tham gia nh√≥m", "Comment"]
    job_found = False
    job_type = None

    # L·∫•y job
    for _ in range(3):
        for jb in job_buttons:
            obj = d(textContains=jb)
            if obj.exists(timeout=5):
                obj.click()
                job_found = True
                job_type = jb
                time.sleep(3)
                break
        if job_found:
            break
        print("‚è≠Ô∏è Kh√¥ng c√≥ job ‚Üí k√©o xu·ªëng")
        d.swipe(500, 1500, 500, 500)
        time.sleep(2)

    if not job_found:
        print("‚ùå Kh√¥ng t√¨m th·∫•y job")
        return

    print(f"üìå Job type: {job_type}")

    try:
        if job_type == "TƒÉng Theo d√µi":
            for _ in range(8):
                if click_retry("Theo d√µi") or click_retry(desc="Follow"):
                    print("üë§ ƒê√£ Theo d√µi xong")
                    break
                time.sleep(1)

        else:
            # C√°c job kh√°c
            if click_retry("Tr√¨nh duy·ªát"):
                print("üåê M·ªü tr√¨nh duy·ªát")
                time.sleep(6)

            liked = False
            if click_retry("Th√≠ch") or click_retry(desc="Like") or click_retry(desc="Love"):
                liked = True
                print("üëç Th√≠ch/Love xong")
                d.long_click(500,500)
                click_retry(desc="Love")
                open_golike()

            if not liked:
                print("‚ö†Ô∏è Kh√¥ng c√≥ n√∫t Th√≠ch/Love ‚Üí B√°o l·ªói")
                d.swipe(500,1200,500,800)
                click_retry("B√°o l·ªói")
                time.sleep(2)
                click_retry("G·ª≠i b√°o c√°o")
                return

      
        time.sleep(5)
        if wait_for_text("Ho√†n th√†nh", timeout=12):
            click_retry("Ho√†n th√†nh")
            time.sleep(5)
            handle_ok_popup()
            print("‚úÖ Ho√†n th√†nh, nh·∫≠n xu")
        else:
            click_retry("B√°o l·ªói")
            print("‚ùå Job l·ªói, ƒë√£ b√°o l·ªói")

        job_counter += 1
        if job_counter >= 3:
            job_counter = 0  # reset sau 3 job

    except Exception as e:
        print(f"[WARN] L·ªói x·ª≠ l√Ω job: {e}")

# ====== Ch·∫°y loop ======
while True:
    try:
        do_job()
        time.sleep(2)
    except Exception as e:
        print(f"[ERROR] L·ªói trong qu√° tr√¨nh ch·∫°y: {e}")
        time.sleep(5)
